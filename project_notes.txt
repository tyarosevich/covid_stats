Note that creating a pip requirements.txt file from a conda env should be done with:

pathtopip/pip list --format=freeze > requirements.txt

Simply using freeze gives weird symbolic links.


Also note that you must commit changes befor deploying to EB.

Deployment workflow:

alter python files
adapt dockerfile from other projects if need be - do not use conda envs (memory reasons)
may have to get AWS credentials to log in with eb cli - they are the standard key/secret key in the CSV file.
may have to log in to docker
docker build -t <image name> .
docker run <image name>
click on link to check locally. if port issues you can do docker run -p XXXX:XXXX to get a specific port and go to http://0.0.0.0:XXXX or something like that
If it's working:
eb init
eb create

eb deploy can be used to push changes for already existing projects, super handy.

having issues with the eb cli path and it's irritating as shit. the command to add to bash_profile, which only works for a given terminal session, is:
echo 'export PATH="/root/.ebcli-virtual-env/executables:$PATH"' >> ~/.bash_profile && source ~/.bash_profile

Options just need to be sensible. AWS LInux 2 / Application / etc

